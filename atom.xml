<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[天然呆]]></title>
  <subtitle><![CDATA[我的呆毛可以覆蓋全台灣 XD]]></subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  <link href="http://m80126colin.github.io/blog/"/>
  <updated>2015-01-15T11:35:16.508Z</updated>
  <id>http://m80126colin.github.io/blog/</id>
  
  <author>
    <name><![CDATA[許胖]]></name>
    <email><![CDATA[m80126colin@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[[hexo 3.0.0-beta.1] hexo 原始碼閱讀 01]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%AD%86%E8%A8%98/hexo/hexo-read-code-01/"/>
    <id>http://m80126colin.github.io/blog/articles/筆記/hexo/hexo-read-code-01/</id>
    <published>2015-01-15T08:53:37.000Z</published>
    <updated>2015-01-15T11:34:27.000Z</updated>
    <content type="html"><![CDATA[<p>最近 Tommy 大發佈了 <a href="https://github.com/hexojs/hexo" target="_blank" rel="external">hexo</a> 3.0.0 的 beta1 版本，那麼就藉機來讀一下新版本 hexo 的架構，之後也好開發新東西。</p>
<a id="more"></a>

<h2 id="檔案架構">檔案架構</h2>
<pre><code>./
├── assets/
├── bin/
│    └── hexo
├── lib/
│    ├── box/
│    ├── cli/
│    ├── <span class="built_in">extend</span>/
│    ├── hexo/
│    ├── models/
│    ├── plugins/
│    └── theme/
├── test/
│    ├── fixtures/
│    ├── scripts/
│    ├── util/
│    └── <span class="built_in">index</span>.js
├── .gitignore
├── .gitmodules
├── .jshintrc
├── .npmignore
├── .travis.yml
├── LICENSE
├── README.md
├── appveyor.yml
├── gulpfile.js
└── package.json
</code></pre><h2 id="hexo_主程式_-/bin/hexo">hexo 主程式 ./bin/hexo</h2>
<p>可以看到主程式如下：</p>
<figure class="highlight js"><figcaption><span>./bin/hexo</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#!<span class="regexp">/usr/</span>bin/env node</div><div class="line"><span class="keyword">var</span> args = <span class="built_in">require</span>(<span class="string">'minimist'</span>)(process.argv.slice(<span class="number">2</span>));</div><div class="line"><span class="built_in">require</span>(<span class="string">'../lib/cli/init'</span>)(args);</div></pre></td></tr></table></figure>

<p>估計是解析參數後，由 <code>./lib/cli/init</code> 來初始化。在 <code>./lib/cli/init.js</code> 前幾行宣告：</p>
<figure class="highlight js"><figcaption><span>./lib/cli/init.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">'../hexo'</span>);</div><div class="line"><span class="keyword">var</span> pathFn = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'hexo-fs'</span>);</div><div class="line"><span class="keyword">var</span> chalk = <span class="built_in">require</span>(<span class="string">'chalk'</span>);</div></pre></td></tr></table></figure>

<p>可能 hexo 的主體已經打包成 <code>./lib/hexo</code>。</p>
<h2 id="hexo_本體_-/lib/hexo">hexo 本體 ./lib/hexo</h2>
<h3 id="-/lib/hexo/index-js">./lib/hexo/index.js</h3>
<p><code>./lib/hexo/index.js</code> 定義的是 Hexo 物件，前面的宣告：</p>
<figure class="highlight js"><figcaption><span>./lib/hexo/index.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> util = <span class="built_in">require</span>(<span class="string">'hexo-util'</span>);</div><div class="line"><span class="keyword">var</span> Promise = <span class="built_in">require</span>(<span class="string">'bluebird'</span>);</div><div class="line"><span class="keyword">var</span> pathFn = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">var</span> tildify = <span class="built_in">require</span>(<span class="string">'tildify'</span>);</div><div class="line"><span class="keyword">var</span> Database = <span class="built_in">require</span>(<span class="string">'warehouse'</span>);</div><div class="line"><span class="keyword">var</span> _ = <span class="built_in">require</span>(<span class="string">'lodash'</span>);</div><div class="line"><span class="keyword">var</span> chalk = <span class="built_in">require</span>(<span class="string">'chalk'</span>);</div><div class="line"><span class="keyword">var</span> EventEmitter = <span class="built_in">require</span>(<span class="string">'events'</span>).EventEmitter;</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'hexo-fs'</span>);</div><div class="line"><span class="keyword">var</span> Module = <span class="built_in">require</span>(<span class="string">'module'</span>);</div><div class="line"><span class="keyword">var</span> vm = <span class="built_in">require</span>(<span class="string">'vm'</span>);</div><div class="line"><span class="keyword">var</span> pkg = <span class="built_in">require</span>(<span class="string">'../../package.json'</span>);</div><div class="line"><span class="keyword">var</span> createLogger = <span class="built_in">require</span>(<span class="string">'./create_logger'</span>);</div><div class="line"><span class="keyword">var</span> extend = <span class="built_in">require</span>(<span class="string">'../extend'</span>);</div><div class="line"><span class="keyword">var</span> Render = <span class="built_in">require</span>(<span class="string">'./render'</span>);</div><div class="line"><span class="keyword">var</span> registerModels = <span class="built_in">require</span>(<span class="string">'./register_models'</span>);</div><div class="line"><span class="keyword">var</span> Post = <span class="built_in">require</span>(<span class="string">'./post'</span>);</div><div class="line"><span class="keyword">var</span> Scaffold = <span class="built_in">require</span>(<span class="string">'./scaffold'</span>);</div><div class="line"><span class="keyword">var</span> Source = <span class="built_in">require</span>(<span class="string">'./source'</span>);</div><div class="line"><span class="keyword">var</span> Router = <span class="built_in">require</span>(<span class="string">'./router'</span>);</div><div class="line"><span class="keyword">var</span> defaultConfig = <span class="built_in">require</span>(<span class="string">'./default_config'</span>);</div></pre></td></tr></table></figure>

<p>在第 54 行到 64 行初始化 hexo.extend：</p>
<figure class="highlight js"><figcaption><span>./lib/hexo/index.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.extend = {</div><div class="line">  <span class="built_in">console</span>: <span class="keyword">new</span> extend.Console(),</div><div class="line">  deployer: <span class="keyword">new</span> extend.Deployer(),</div><div class="line">  filter: <span class="keyword">new</span> extend.Filter(),</div><div class="line">  generator: <span class="keyword">new</span> extend.Generator(),</div><div class="line">  helper: <span class="keyword">new</span> extend.Helper(),</div><div class="line">  migrator: <span class="keyword">new</span> extend.Migrator(),</div><div class="line">  processor: <span class="keyword">new</span> extend.Processor(),</div><div class="line">  renderer: <span class="keyword">new</span> extend.Renderer(),</div><div class="line">  tag: <span class="keyword">new</span> extend.Tag()</div><div class="line">};</div></pre></td></tr></table></figure>

<p>我們可以知道 hexo 的 plugins 有 9 種 (配合<a href="http://hexo.io/docs/plugins.html" target="_blank" rel="external">文件</a>)：</p>
<ul>
<li>console：用來操控 hexo 的介面</li>
<li>depolyer：將 blog 佈署在各種系統上</li>
<li>filter：用來修蓋特定內容的工具 (ex. excerpt 等)</li>
<li>generator：用來生成靜態文件 (ex. RSS, sitemap 等)</li>
<li>helper：寫 theme 時，用來快速插入特定內容的工具</li>
<li>migrator：從別的 blog 系統搬來 hexo 的工具</li>
<li>processor：處理 <code>source</code> 資料夾的原始檔案</li>
<li>render：用來處理特定文件 (ex. ejs, stylus, jade 等)</li>
<li>tag：用作快速插入特定內容的工具 (ex. bootstrap, multimedia 等)</li>
</ul>
<p>而在 <code>Hexo.prototype.init</code> 中，第 116 行到 122 行：</p>
<figure class="highlight js"><figcaption><span>./lib/hexo/index.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Load internal plugins</span></div><div class="line"><span class="built_in">require</span>(<span class="string">'../plugins/console'</span>)(<span class="keyword">this</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">'../plugins/filter'</span>)(<span class="keyword">this</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">'../plugins/generator'</span>)(<span class="keyword">this</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">'../plugins/helper'</span>)(<span class="keyword">this</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">'../plugins/processor'</span>)(<span class="keyword">this</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">'../plugins/renderer'</span>)(<span class="keyword">this</span>);</div><div class="line"><span class="built_in">require</span>(<span class="string">'../plugins/tag'</span>)(<span class="keyword">this</span>);</div></pre></td></tr></table></figure>

<p>載入 hexo 本身擁有的 plugin。</p>
<h2 id="hexo_本身擁有的_plugins">hexo 本身擁有的 plugins</h2>
<h3 id="內建_plugin_架構">內建 plugin 架構</h3>
<pre><code>./lib/plugins/
├── console/
│    ├── clean.js
│    ├── config.js
│    ├── deploy.js
│    ├── generate.js
│    ├── <span class="keyword">help</span>.js
│    ├── <span class="built_in">index</span>.js
│    ├── init.js
│    ├── migrate.js
│    ├── <span class="keyword">new</span>.js
│    ├── publish.js
│    ├── render.js
│    └── <span class="keyword">version</span>.js
├── <span class="built_in">filter</span>/
│    ├── after_post_render/
│    │    ├── excerpt.js
│    │    ├── external_link.js
│    │    └── <span class="built_in">index</span>.js
│    ├── before_post_render/
│    │    ├── backtick_code_block.js
│    │    ├── <span class="built_in">index</span>.js
│    │    └── titlecase.js
│    ├── <span class="built_in">index</span>.js
│    ├── new_post_path.js
│    └── post_permalink.js
├── generator/
│    ├── asset.js
│    ├── <span class="built_in">index</span>.js
│    ├── page.js
│    └── post.js
├── helper/
│    ├── css.js
│    ├── date.js
│    ├── favicon_tag.js
│    ├── feed_tag.js
│    ├── format.js
│    ├── fragment_cache.js
│    ├── gravatar.js
│    ├── image_tag.js
│    ├── <span class="built_in">index</span>.js
│    ├── <span class="keyword">is</span>.js
│    ├── js.js
│    ├── link_to.js
│    ├── list_archives.js
│    ├── list_categories.js
│    ├── list_posts.js
│    ├── list_tags.js
│    ├── mail_to.js
│    ├── markdown.js
│    ├── number_format.js
│    ├── open_graph.js
│    ├── paginator.js
│    ├── partial.js
│    ├── render.js
│    ├── search_form.js
│    ├── tagcloud.js
│    ├── toc.js
│    └── url.js
├── processor/
│    ├── asset.js
│    ├── common.js
│    ├── <span class="built_in">index</span>.js
│    └── post.js
├── renderer/
│    ├── html.js
│    ├── <span class="built_in">index</span>.js
│    ├── json.js
│    ├── swig.js
│    └── yaml.js
└── <span class="keyword">tag</span>/
    ├── asset_img.js
    ├── asset_link.js
    ├── asset_path.js
    ├── blockquote.js
    ├── code.js
    ├── gist.js
    ├── iframe.js
    ├── img.js
    ├── include_code.js
    ├── <span class="built_in">index</span>.js
    ├── jsfiddle.js
    ├── link.js
    ├── post_link.js
    ├── post_path.js
    ├── pullquote.js
    ├── raw.js
    ├── vimeo.js
    └── youtube.js
</code></pre><h3 id="console">console</h3>
<p>也就是 hexo 的指令，在 <code>./lib/plugins/console/index.js</code> 中逐一註冊各指令，其中第 2 行：</p>
<figure class="highlight js"><figcaption><span>./lib/plugins/console/index.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> <span class="built_in">console</span> = ctx.extend.console;</div></pre></td></tr></table></figure>

<p><code>ctx</code> 從 <code>./lib/hexo/index.js</code> 的 <code>require(&#39;../plugins/console&#39;)(this);</code> 進來時是 <code>Hexo</code> 本身，我們可以從 <code>./lib/plugins/console/index.js</code> 看到內建的指令有：</p>
<ul>
<li>clean</li>
<li>config</li>
<li>deploy</li>
<li>generate</li>
<li>help</li>
<li>init</li>
<li>list</li>
<li>migrate</li>
<li>new</li>
<li>publish</li>
<li>render</li>
<li>version</li>
</ul>
<p>從<a href="http://hexo.io/docs/plugins.html#Console" target="_blank" rel="external">文件</a>雖然可以知道大概的註冊方法，但是設定 <code>option</code> 還是得從 <code>./lib/hexo/index.js</code> 第 55 行 <code>console: new extend.Console(),</code> 開始找起。</p>
<h3 id="filter">filter</h3>
<p>在 <code>./lib/plugins/filter/index.js</code> 有：</p>
<figure class="highlight js"><figcaption><span>./lib/plugins/filter/index.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'./after_post_render'</span>)(ctx);</div><div class="line"><span class="built_in">require</span>(<span class="string">'./before_post_render'</span>)(ctx);</div></pre></td></tr></table></figure>

<p>遞迴註冊 filter。內建的 filter：</p>
<ul>
<li>new_post_path</li>
<li>post_permalink</li>
<li>after_post_render：在 md 檔被 render 後執行<ul>
<li>excerpt</li>
<li>external_link</li>
</ul>
</li>
<li>before_post_render：在 md 檔被 render 前執行<ul>
<li>backtick_code_block</li>
<li>titlecase</li>
</ul>
</li>
</ul>
<h3 id="generator">generator</h3>
<ul>
<li>asset</li>
<li>page</li>
<li>post</li>
</ul>
<h3 id="helper">helper</h3>
<p>在 <code>./date.js</code> 內：</p>
<ul>
<li>date</li>
<li>date_xml</li>
<li>time</li>
<li>full_date</li>
<li>time_tag</li>
<li>moment</li>
</ul>
<p>在 <code>./format.js</code> 內：</p>
<ul>
<li>strip_html</li>
<li>trim</li>
<li>titlecase</li>
<li>word_wrap</li>
<li>truncate</li>
</ul>
<p>在 <code>./is.js</code> 內：</p>
<ul>
<li>is_current</li>
<li>is_home</li>
<li>is_post</li>
<li>is_archive</li>
<li>is_year</li>
<li>is_month</li>
<li>is_category</li>
<li>is_tag</li>
</ul>
<p>在 <code>./tagcloud.js</code> 內：</p>
<ul>
<li>tagcloud</li>
<li>tag_cloud (同上)</li>
</ul>
<p>在 <code>./url.js</code> 內：</p>
<ul>
<li>relative_url</li>
<li>url_for</li>
</ul>
<p>連結工具：</p>
<ul>
<li>css</li>
<li>js</li>
<li>link_to</li>
<li>mail_to</li>
<li>image_tag</li>
<li>favicon_tag</li>
<li>feed_tag</li>
</ul>
<p>list 系列：</p>
<ul>
<li>list_archives</li>
<li>list_categories</li>
<li>list_tags</li>
<li>list_posts</li>
</ul>
<p>其他：</p>
<ul>
<li>search_form</li>
<li>fragment_cache (傳入參數 ctx)</li>
<li>gravatar</li>
<li>open_graph</li>
<li>number_format</li>
<li>paginator</li>
<li>partial (傳入參數 ctx)</li>
<li>markdown</li>
<li>render (傳入參數 ctx)</li>
<li>toc</li>
</ul>
<h3 id="processor">processor</h3>
<ul>
<li>asset</li>
<li>post</li>
</ul>
<h3 id="renderer">renderer</h3>
<p>根據<a href="http://hexo.io/docs/plugins.html#Renderer" target="_blank" rel="external">文件</a>，註冊方式有四個參數：</p>
<ol>
<li>輸入檔案格式</li>
<li>輸出檔案格式</li>
<li>render 函數</li>
<li>是否同步</li>
</ol>
<p>直接貼出 <code>./lib/plugins/renderer/index.js</code>：</p>
<figure class="highlight js"><figcaption><span>./lib/plugins/renderer/index.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> renderer = ctx.extend.renderer;</div><div class="line"><span class="keyword">var</span> html = <span class="built_in">require</span>(<span class="string">'./html'</span>);</div><div class="line">renderer.register(<span class="string">'htm'</span>, <span class="string">'html'</span>, html, <span class="literal">true</span>);</div><div class="line">renderer.register(<span class="string">'html'</span>, <span class="string">'html'</span>, html, <span class="literal">true</span>);</div><div class="line">renderer.register(<span class="string">'json'</span>, <span class="string">'json'</span>, <span class="built_in">require</span>(<span class="string">'./json'</span>), <span class="literal">true</span>);</div><div class="line">renderer.register(<span class="string">'swig'</span>, <span class="string">'html'</span>, <span class="built_in">require</span>(<span class="string">'./swig'</span>), <span class="literal">true</span>);</div><div class="line"><span class="keyword">var</span> yml = <span class="built_in">require</span>(<span class="string">'./yaml'</span>);</div><div class="line">renderer.register(<span class="string">'yml'</span>, <span class="string">'json'</span>, yml, <span class="literal">true</span>);</div><div class="line">renderer.register(<span class="string">'yaml'</span>, <span class="string">'json'</span>, yml, <span class="literal">true</span>);</div></pre></td></tr></table></figure>

<h3 id="tag">tag</h3>
<p>類似就不整理了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近 Tommy 大發佈了 <a href="https://github.com/hexojs/hexo" target="_blank" rel="external">hexo</a> 3.0.0 的 beta1 版本，那麼就藉機來讀一下新版本 hexo 的架構，之後也好開發新東西。</p>
]]>
    
    </summary>
    
      <category term="hexo" scheme="http://m80126colin.github.io/blog/tags/hexo/"/>
    
      <category term="hxojs" scheme="http://m80126colin.github.io/blog/tags/hxojs/"/>
    
      <category term="筆記" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/"/>
    
      <category term="hexo" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[轉載] 一堆三個字在一起，你會念嗎?]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E8%AA%9E%E8%A8%80/%E4%B8%AD%E6%96%87/triple-chinese/"/>
    <id>http://m80126colin.github.io/blog/articles/語言/中文/triple-chinese/</id>
    <published>2015-01-05T09:09:15.000Z</published>
    <updated>2015-01-05T11:56:32.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>三個「金」—&gt;鑫：ㄒㄧㄣ，興盛、多財。</li>
<li>三個「木」—&gt;森：ㄙㄣ<ol>
<li>樹木濃密的樣子。</li>
<li>眾多的。</li>
</ol>
</li>
<li>三個「水」—&gt;淼：ㄇㄧㄠˇ，水流廣大的樣子。</li>
<li>三個「火」—&gt;焱：ㄧㄢˋ，火花、火焰。</li>
<li>三個「土」—&gt;垚：ㄧㄠˊ<ol>
<li>土高起的樣子。</li>
<li>「堯」之異體。</li>
</ol>
</li>
</ul>
<a id="more"></a>

<ul>
<li>三個「石」—&gt;磊：ㄌㄟˇ，眾多石塊累積在一起。</li>
<li>三個「虫」—&gt;蟲：ㄔㄨㄥˊ，昆蟲的總稱。</li>
<li>三個「日」—&gt;晶：ㄐㄧㄥ，光輝。</li>
<li>三個「力」—&gt;劦：ㄒㄧㄝˊ，合力、同力。</li>
<li>三個「刀」—&gt;刕：ㄌㄧˊ<ol>
<li>姓。</li>
<li>割。</li>
</ol>
</li>
<li>三個「口」—&gt;品：ㄆㄧㄣˇ<ol>
<li>眾多的。</li>
<li>某一類東西的總稱。</li>
<li>事物的種類。</li>
<li>等級。</li>
<li>人的德性。</li>
<li>評量、評斷好壞優劣。</li>
</ol>
</li>
<li>三個「犬」—&gt;猋：ㄅㄧㄠ<ol>
<li>犬急奔。</li>
<li>暴風。同「飆」。</li>
</ol>
</li>
<li>三個「女」—&gt;姦：ㄐㄧㄢ<ol>
<li>邪惡小人、犯法作亂的人。</li>
<li>發生不正當的性行為。</li>
<li>狡詐、邪惡。</li>
</ol>
</li>
<li>三個「子」—&gt;孨：ㄓㄨㄢˇ<ol>
<li>或通「孱」。</li>
<li>孤露可憐。</li>
<li>孤兒。</li>
</ol>
</li>
<li>三個「牛」—&gt;犇：ㄅㄣ，「奔」之異體。</li>
<li>三個「魚」—&gt;鱻：ㄒㄧㄢ，「鮮」之異體。</li>
<li>三個「鹿」—&gt;麤：ㄘㄨ<ol>
<li>超遠、遙遠。</li>
<li>「粗」之異體。</li>
</ol>
</li>
<li>三個「馬」—&gt;驫：ㄅㄧㄠ，眾馬走貌。</li>
<li>三個「耳」—&gt;聶：ㄋㄧㄝˋ，附在耳邊小聲說話。</li>
<li>三個「車」—&gt;轟：ㄏㄨㄥ<ol>
<li>形容巨大的聲響。</li>
<li>擊震。</li>
</ol>
</li>
<li>三個「直」—&gt;矗：ㄔㄨˋ<ol>
<li>向上高聳直立。</li>
<li>草木茂盛。</li>
</ol>
</li>
<li>三個「毛」—&gt;毳：ㄘㄨㄟˋ<ol>
<li>鳥獸的細毛。說文解字：「毳，獸細毛也。」</li>
<li>脆弱、不堅韌。通「脆」。</li>
</ol>
</li>
<li>三個「白」—&gt;皛<ol>
<li>ㄐㄧㄠˇ，明顯，明亮。</li>
<li>ㄆㄛˋ，拍、打。</li>
</ol>
</li>
<li>三個「手」—&gt;掱：ㄕㄡˇ，扒手。</li>
<li>三個「心」—&gt;惢：ㄙㄨㄛˇ，心疑、多慮。</li>
<li>三個「田」—&gt;畾<ol>
<li>ㄌㄟˊ，田間之地。</li>
<li>「雷」之異體。</li>
<li>「壘」之異體。</li>
</ol>
</li>
<li>三個「舌」—&gt;舙：ㄏㄨㄚˋ，「話」之異體。</li>
<li>三個「龍」—&gt;龘：ㄊㄚˋ，龍飛之貌。</li>
<li>三個「貝」—&gt;贔：ㄅㄧˋ<ol>
<li>贔風：暴怒的風。</li>
<li>贔屭：<ol>
<li>用力的樣子。文選．張衡．西京賦：「綴以二華，巨贔屭。」</li>
<li>動物名。龜類，好負重，舊時碑下所刻仙龜怪物即是。</li>
</ol>
</li>
</ol>
</li>
<li>三個「羊」—&gt;羴：ㄕㄢ，「羶」之異體字。羊身上的臊味。</li>
<li>三個「草頭」—&gt;芔<ol>
<li>ㄏㄨㄟˋ，卉，草類植物的總稱。</li>
<li>ㄙㄚˋ，「卅」之異體字。</li>
</ol>
</li>
<li>三個「ㄙ」—&gt;厽：「累」之異體。<ol>
<li>ㄌㄟˇ。</li>
<li>ㄌㄟˋ。</li>
<li>ㄌㄟˊ。</li>
</ol>
</li>
<li>三個「又」—&gt;叒：「若」之異體。<ol>
<li>ㄖㄨㄛˋ。</li>
<li>ㄖㄜˇ。</li>
</ol>
</li>
<li>三個「吉」—&gt;嚞：ㄓㄜˊ，「哲」之異體，也可寫作「喆」。</li>
<li>三個「隹」—&gt;雥：ㄗㄚˊ，群鳥。</li>
<li>三個「言」—&gt;譶：ㄊㄚˋ，疾言也。</li>
<li>三個「止」—&gt;歮：ㄙㄜˋ，「澀」之異體。</li>
<li>三個「士」—&gt;壵：ㄓㄨㄤˋ，「壯」之異體。</li>
<li>三個「飛」—&gt;飝：ㄈㄟ，「飛」之異體。</li>
<li>三個「香」—&gt;馫：ㄒㄧㄥ，香氣也。</li>
<li>三個「雷」—&gt;靐：ㄅㄧㄥˋ，雷聲也。</li>
<li>三個「泉」—&gt;灥<ol>
<li>ㄒㄩㄣˊ，三泉相通。</li>
<li>ㄑㄩㄢˊ，「泉」之異體。</li>
</ol>
</li>
<li>三個「小」—&gt;尛：「麼」之異體。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>三個「金」—&gt;鑫：ㄒㄧㄣ，興盛、多財。</li>
<li>三個「木」—&gt;森：ㄙㄣ<ol>
<li>樹木濃密的樣子。</li>
<li>眾多的。</li>
</ol>
</li>
<li>三個「水」—&gt;淼：ㄇㄧㄠˇ，水流廣大的樣子。</li>
<li>三個「火」—&gt;焱：ㄧㄢˋ，火花、火焰。</li>
<li>三個「土」—&gt;垚：ㄧㄠˊ<ol>
<li>土高起的樣子。</li>
<li>「堯」之異體。</li>
</ol>
</li>
</ul>
]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[[翻譯][UVa][599] The Forrest for the Trees]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%BF%BB%E8%AD%AF/uva/uva599/"/>
    <id>http://m80126colin.github.io/blog/articles/翻譯/uva/uva599/</id>
    <published>2014-10-23T05:49:59.000Z</published>
    <updated>2014-10-23T08:44:38.000Z</updated>
    <content type="html"><![CDATA[<p>一張圖 (graph) <span>$G$</span> 有一個點集 <span>$V(G)$</span> 和一個邊集 <span>$E(G)$</span>，其中邊集 <span>$E(G)$</span> 內的元素是 <span>$V(G)$</span> 中相異兩個無序點對。</p>
<p><strong>範例一</strong>：令 <span>$G$</span> 是一張圖，<span>$V(G) = \{a, b, c, d\}$</span> 且 <span>$E(G) = \{(a, b), (b, c), (c, d), (d, b)\}$</span>，下圖給出整個圖 <span>$G$</span>：</p>
<img src="/blog/img/uva/q599/p599a.gif">

<p>注意圖 G 包含一個「環」<span>$\{(b, c), (c, d), (d, b)\}$</span>。一張缺乏環的圖我們稱為樹 (tree)。圖 G 的一條路徑 (path) 是點和邊的交替序列 (序列是由點開始和結束) 且路徑上所有點皆相異。在範例一的圖中，<span>$\{a, (a, b), b, (b, c), c, (c, d)\}$</span> 是一條路徑。</p>
<p><strong>事實</strong>：樹上任意兩點的路徑是唯一的</p>
<p>如果一張圖任意點對有一條路徑，則圖是連通的 (connected)，範例一的圖即是連通的。如果一張圖沒有連通而有數個子圖 (subgraph)，則每個子圖被稱為圖 <span>$G$</span> 的連通分量 (connected component)。</p>
<p>如果一張圖的連通分量都是樹，則整張圖稱為森林 (forest)，見下圖。</p>
<img src="/blog/img/uva/q599/p599b.gif">

<p>一個值得一提的極端例子，就是若有一個連通分量樹只有一個點而沒有邊，這棵樹就像是一個孤立點，我們稱之為橡實 (acorn)。接下來我們來定義本問題。</p>
<p><strong>問題</strong>：給一座森林，請您寫一隻程式計算有幾棵樹和幾個橡實。</p>
<a id="more"></a>

<h2 id="輸入">輸入</h2>
<p>輸入檔第一行有一個整數，代表接下來你要處理的測資組數。每組測資包含兩個部分，描述著一座森林：</p>
<ol>
<li>一堆樹的邊 (每個邊佔一行，每行有一對大寫字母，且以一行星號為界)。</li>
<li>一堆樹的點 (這些點會在一行，並且最多只會有 26 個大寫字母，對應到 A - Z)</li>
</ol>
<h2 id="輸出">輸出</h2>
<p>對於每組測試資料，你的程式必須用一句話印出樹和橡實的數量，例如：</p>
<p>「There are x tree(s) and y acorn(s).」x 和 y 分別是樹的數量和橡實的數量。</p>
<p><strong>範例二</strong>：令 <span>$G$</span> 是一張圖，而這張圖是第一筆範例輸入，這張圖就會長得如下圖：</p>
<img src="/blog/img/uva/q599/p599c.gif">

<p><strong>注意</strong>：一座森林可能全都是橡實、全都是樹、或者在這之間的所有可能，因此請多注意不要漏掉森林裡的任何一棵樹！</p>
<h2 id="範例輸入">範例輸入</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="number">2</span></div><div class="line">(A,B)</div><div class="line">(B,<span class="keyword">C</span>)</div><div class="line">(B,<span class="keyword">D</span>)</div><div class="line">(<span class="keyword">D</span>,<span class="keyword">E</span>)</div><div class="line">(<span class="keyword">E</span>,F)</div><div class="line">(B,G)</div><div class="line">(G,H)</div><div class="line">(G,<span class="keyword">I</span>)</div><div class="line">(J,<span class="keyword">K</span>)</div><div class="line">(<span class="keyword">K</span>,L)</div><div class="line">(<span class="keyword">K</span>,M)</div><div class="line">****</div><div class="line">A,B,<span class="keyword">C</span>,<span class="keyword">D</span>,<span class="keyword">E</span>,F,G,H,<span class="keyword">I</span>,J,<span class="keyword">K</span>,L,M,<span class="keyword">N</span></div><div class="line">(A,B)</div><div class="line">(A,<span class="keyword">C</span>)</div><div class="line">(<span class="keyword">C</span>,F)</div><div class="line">**</div><div class="line">A,B,<span class="keyword">C</span>,<span class="keyword">D</span>,F</div></pre></td></tr></table></figure>

<h2 id="範例輸出">範例輸出</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">There</span> are <span class="number">2</span> tree(s) <span class="keyword">and</span> <span class="number">1</span> acorn(s).</div><div class="line"><span class="variable">There</span> are <span class="number">1</span> tree(s) <span class="keyword">and</span> <span class="number">1</span> acorn(s).</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>一張圖 (graph) <span>$G$</span> 有一個點集 <span>$V(G)$</span> 和一個邊集 <span>$E(G)$</span>，其中邊集 <span>$E(G)$</span> 內的元素是 <span>$V(G)$</span> 中相異兩個無序點對。</p>
<p><strong>範例一</strong>：令 <span>$G$</span> 是一張圖，<span>$V(G) = \{a, b, c, d\}$</span> 且 <span>$E(G) = \{(a, b), (b, c), (c, d), (d, b)\}$</span>，下圖給出整個圖 <span>$G$</span>：</p>
<img src="/blog/img/uva/q599/p599a.gif">

<p>注意圖 G 包含一個「環」<span>$\{(b, c), (c, d), (d, b)\}$</span>。一張缺乏環的圖我們稱為樹 (tree)。圖 G 的一條路徑 (path) 是點和邊的交替序列 (序列是由點開始和結束) 且路徑上所有點皆相異。在範例一的圖中，<span>$\{a, (a, b), b, (b, c), c, (c, d)\}$</span> 是一條路徑。</p>
<p><strong>事實</strong>：樹上任意兩點的路徑是唯一的</p>
<p>如果一張圖任意點對有一條路徑，則圖是連通的 (connected)，範例一的圖即是連通的。如果一張圖沒有連通而有數個子圖 (subgraph)，則每個子圖被稱為圖 <span>$G$</span> 的連通分量 (connected component)。</p>
<p>如果一張圖的連通分量都是樹，則整張圖稱為森林 (forest)，見下圖。</p>
<img src="/blog/img/uva/q599/p599b.gif">

<p>一個值得一提的極端例子，就是若有一個連通分量樹只有一個點而沒有邊，這棵樹就像是一個孤立點，我們稱之為橡實 (acorn)。接下來我們來定義本問題。</p>
<p><strong>問題</strong>：給一座森林，請您寫一隻程式計算有幾棵樹和幾個橡實。</p>
]]>
    
    </summary>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/tags/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="UVa/ACM" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/UVa-ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[翻譯][UVa][10685] Nature]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%BF%BB%E8%AD%AF/uva/uva10685/"/>
    <id>http://m80126colin.github.io/blog/articles/翻譯/uva/uva10685/</id>
    <published>2014-10-22T21:33:04.000Z</published>
    <updated>2014-10-23T04:07:33.000Z</updated>
    <content type="html"><![CDATA[<p>在自然界中，存在著食物鏈 (alimentary chain)，在食物鏈的底層通常是植物 (vegetal)，小型動物吃這些植物，然後大型動物吃這些小型動物。食物鏈可以是環狀，當有些動物死掉後他將會分解變成礦物質，而這些礦物質會是植物的營養來源。</p>
<p>在這題目中，給你一堆生物，你將找出最大的食物鏈。如果 <span>$A$</span> 是 <span>$B$</span> 的掠食者 (predator)，則你可以將他們都視為在相同食物鏈中。</p>
<a id="more"></a>

<h2 id="輸入">輸入</h2>
<p>輸入檔案中有多組輸入，每組輸入的敘述如下：</p>
<p>每組輸入開始有兩個整數 <span>$C$</span> (<span>$1\leq{C}\leq{5000}$</span>) 和 <span>$R$</span> (<span>$0\leq{R}\leq{5000}$</span>)，<span>$C$</span> 代表生物數量，<span>$R$</span> 代表關係數量。接下來的 <span>$C$</span> 行是生物名稱，每個名稱由大寫字母 (A, B, …, Z)、小寫字母 (a, b, …, z) 和底線 (_) 構成，名稱的長度不會超過 30 個字元。接著有 <span>$R$</span> 行描述生物之間的關係，每一行會有兩個生物名稱，代表第二個生物是第一個生物的掠食者。你可以假設任何生物的掠食者不會是自己。</p>
<p>輸入結束在 <span>$C=R=0$</span>，這組輸入不必處理。兩組輸入間會有一個空白行隔開。</p>
<h2 id="輸出">輸出</h2>
<p>對於每組輸入，產生一行輸出，代表最大的食物鏈大小。</p>
<h2 id="範例輸入">範例輸入</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">5 2</div><div class="line">caterpillar</div><div class="line">bird</div><div class="line">horse</div><div class="line">elefant</div><div class="line">herb</div><div class="line">herb caterpillar</div><div class="line">caterpillar bird</div><div class="line"> </div><div class="line">0 0</div></pre></td></tr></table></figure>

<h2 id="範例輸出">範例輸出</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">3</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>在自然界中，存在著食物鏈 (alimentary chain)，在食物鏈的底層通常是植物 (vegetal)，小型動物吃這些植物，然後大型動物吃這些小型動物。食物鏈可以是環狀，當有些動物死掉後他將會分解變成礦物質，而這些礦物質會是植物的營養來源。</p>
<p>在這題目中，給你一堆生物，你將找出最大的食物鏈。如果 <span>$A$</span> 是 <span>$B$</span> 的掠食者 (predator)，則你可以將他們都視為在相同食物鏈中。</p>
]]>
    
    </summary>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/tags/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="UVa/ACM" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/UVa-ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[翻譯][UVa][11525] Permutation]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%BF%BB%E8%AD%AF/uva/uva11525/"/>
    <id>http://m80126colin.github.io/blog/articles/翻譯/uva/uva11525/</id>
    <published>2014-10-22T18:49:56.000Z</published>
    <updated>2014-10-22T19:31:44.000Z</updated>
    <content type="html"><![CDATA[<p>給定 <span>$N$</span> 和 <span>$K$</span>，請從 1 到 <span>$K$</span> 的字典順序排列中，找出第 <span>$N$</span> 個排列，<span>$N$</span> 從 0 開始，因為 <span>$N$</span> 會很大，因此我們用 K 個非負整數 <span>$S_1$</span>, <span>$S_2$</span>, <span>$\cdots{}$</span>, <span>$S_k$</span> 來表示。從這一系列的數字，我們可以用下面的公式計算 <span>$N$</span>：</p>
<span>$$\sum^{K}_{i=1}{S_i\times{(K-i)!}}$$</span>

<a id="more"></a>

<h2 id="輸入">輸入</h2>
<p>第一行有一個整數 <span>$T$</span> (<span>$\leq{10}$</span>) 代表測試資料的數量。每筆測資會有兩行，第一行有一個整數 <span>$K$</span> (<span>$1\leq{K}\leq{50000}$</span>)，接下來一行會有 <span>$K$</span> 個整數 <span>$S_1$</span>, <span>$S_2$</span>, <span>$\cdots{}$</span>, <span>$S_k$</span> (<span>$0\leq{S_i}\leq{K-i}$</span>)。</p>
<h2 id="輸出">輸出</h2>
<p>對於每筆測資，輸出 1 到 K 的第 <span>$N$</span> 個排列，這 <span>$N$</span> 個數字間有一個空白隔開。</p>
<h2 id="範例輸入">範例輸入</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">4</div><div class="line">3</div><div class="line">2 1 0</div><div class="line">3</div><div class="line">1 0 0</div><div class="line">4</div><div class="line">2 1 1 0</div><div class="line">4</div><div class="line">1 2 1 0</div></pre></td></tr></table></figure>

<h2 id="範例輸出">範例輸出</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">3 2 1</div><div class="line">2 1 3</div><div class="line">3 2 4 1</div><div class="line">2 4 3 1</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>給定 <span>$N$</span> 和 <span>$K$</span>，請從 1 到 <span>$K$</span> 的字典順序排列中，找出第 <span>$N$</span> 個排列，<span>$N$</span> 從 0 開始，因為 <span>$N$</span> 會很大，因此我們用 K 個非負整數 <span>$S_1$</span>, <span>$S_2$</span>, <span>$\cdots{}$</span>, <span>$S_k$</span> 來表示。從這一系列的數字，我們可以用下面的公式計算 <span>$N$</span>：</p>
<span>$$\sum^{K}_{i=1}{S_i\times{(K-i)!}}$$</span>

]]>
    
    </summary>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/tags/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="UVa/ACM" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/UVa-ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[翻譯][UVa][12086] Potentiometers]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%BF%BB%E8%AD%AF/uva/uva12086/"/>
    <id>http://m80126colin.github.io/blog/articles/翻譯/uva/uva12086/</id>
    <published>2014-10-22T17:45:55.000Z</published>
    <updated>2014-10-22T19:17:52.000Z</updated>
    <content type="html"><![CDATA[<p>電位計 (potentiometer，簡稱 potmeter) 是一種有可變電阻的電子設備，它有兩個接點 (terminal) 和一些控制結構 (通常是刻度盤、齒輪或者滑塊) 使得我們可以調整兩接點間的電阻值從 0 (無電阻) 到一個最大值。電阻的單位是歐姆 (Ohm)，當有兩個以上的電阻串聯 (也就是一個接著一個連接) 在一起，總電阻就會是個別電阻的總和。</p>
<p>在這個問題中，我們考慮 <span>$N$</span> 個串聯的電位計，從左到右分別編號為 1 號到 <span>$N$</span> 號，第 <span>$x$</span> 號的電位計左側接點和第 <span>$x-1$</span> 號的右側相連，且第 <span>$x$</span> 號的電位計右側接點和第 <span>$x+1$</span> 號的左側相連，而 1 號電位計的左側接點和 <span>$N$</span> 號的右側接點並沒有接上其他東西。</p>
<p>一開始所有電位計會有介於 0 到 1000 歐姆的電阻，我們可以做兩件事：</p>
<ul>
<li>設定其中一個電位計為另一個電阻值</li>
<li>測量任意兩個接點之間的電阻</li>
</ul>
<a id="more"></a>

<h2 id="輸入">輸入</h2>
<p>輸入有不超過 3 組測資。每組測資一開始有一個 <span>$N$</span>，代表電位計的數量，<span>$N$</span> 可以大到 200000。接著有 <span>$N$</span> 行，每行有一個介於 0 到 1000 的數字，代表 1 號到 <span>$N$</span> 號電位計的初始電阻值。接著有數次操作，每行代表一個操作，操作數可達到 200000 次，這裡有 3 種操作：</p>
<ul>
<li>「S <span>$x$</span> <span>$r$</span>」- 設定第 <span>$x$</span> 號電位計的電阻值為 <span>$r$</span> 歐姆，<span>$x$</span> 會是一個有效的電位計編號而 <span>$r$</span> 介於 0 到 1000</li>
<li>「M <span>$x$</span> <span>$y$</span>」- 測量 <span>$x$</span> 號左側接點到 <span>$y$</span> 號右側接點的電阻，兩個編號都會是有效的且 <span>$x$</span> 小於等於 <span>$y$</span></li>
<li>「END」- 該筆測試資料的結束，只會在一系列操作的最尾端出現一次</li>
</ul>
<p>如果一筆 <span>$N=0$</span> 的測資出現代表輸入結束，並且此筆測資不需處理。</p>
<h2 id="輸出">輸出</h2>
<p>對於輸入的每筆測資，請先生出一行「<code>Case n:</code>」，而 <span>$n$</span> 是從 1 開始的測資編號。</p>
<p>而對於輸入中每次的測量操作，輸出包含一個數字的一行，此數字為測量到電阻值。這些操作會作用在依照輸入順序的電位計中。</p>
<p>請在每組測資間輸出一個空白行。</p>
<p><strong>注意:</strong> 輸入測資非常大 (~ 8 MB) 所以要用快一點的 IO 方法。</p>
<h2 id="範例輸入">範例輸入</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="number">3</span></div><div class="line"><span class="number">100</span></div><div class="line"><span class="number">100</span></div><div class="line"><span class="number">100</span></div><div class="line">M <span class="number">1</span> <span class="number">1</span></div><div class="line">M <span class="number">1</span> <span class="number">3</span></div><div class="line">S <span class="number">2</span> <span class="number">200</span></div><div class="line">M <span class="number">1</span> <span class="number">2</span></div><div class="line">S <span class="number">3</span> <span class="number">0</span></div><div class="line">M <span class="number">2</span> <span class="number">3</span></div><div class="line"><span class="keyword">END</span></div><div class="line"><span class="number">10</span></div><div class="line"><span class="number">1</span></div><div class="line"><span class="number">2</span></div><div class="line"><span class="number">3</span></div><div class="line"><span class="number">4</span></div><div class="line"><span class="number">5</span></div><div class="line"><span class="number">6</span></div><div class="line"><span class="number">7</span></div><div class="line"><span class="number">8</span></div><div class="line"><span class="number">9</span></div><div class="line"><span class="number">10</span></div><div class="line">M <span class="number">1</span> <span class="number">10</span></div><div class="line"><span class="keyword">END</span></div><div class="line"><span class="number">0</span></div></pre></td></tr></table></figure>

<h2 id="範例輸出">範例輸出</h2>
<figure class="highlight text"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Case</span> <span class="number">1</span>:</div><div class="line"><span class="number">100</span></div><div class="line"><span class="number">300</span></div><div class="line"><span class="number">300</span></div><div class="line"><span class="number">200</span></div><div class="line"> </div><div class="line"><span class="keyword">Case</span> <span class="number">2</span>:</div><div class="line"><span class="number">55</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>電位計 (potentiometer，簡稱 potmeter) 是一種有可變電阻的電子設備，它有兩個接點 (terminal) 和一些控制結構 (通常是刻度盤、齒輪或者滑塊) 使得我們可以調整兩接點間的電阻值從 0 (無電阻) 到一個最大值。電阻的單位是歐姆 (Ohm)，當有兩個以上的電阻串聯 (也就是一個接著一個連接) 在一起，總電阻就會是個別電阻的總和。</p>
<p>在這個問題中，我們考慮 <span>$N$</span> 個串聯的電位計，從左到右分別編號為 1 號到 <span>$N$</span> 號，第 <span>$x$</span> 號的電位計左側接點和第 <span>$x-1$</span> 號的右側相連，且第 <span>$x$</span> 號的電位計右側接點和第 <span>$x+1$</span> 號的左側相連，而 1 號電位計的左側接點和 <span>$N$</span> 號的右側接點並沒有接上其他東西。</p>
<p>一開始所有電位計會有介於 0 到 1000 歐姆的電阻，我們可以做兩件事：</p>
<ul>
<li>設定其中一個電位計為另一個電阻值</li>
<li>測量任意兩個接點之間的電阻</li>
</ul>
]]>
    
    </summary>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/tags/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="翻譯" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/"/>
    
      <category term="UVa/ACM" scheme="http://m80126colin.github.io/blog/categories/%E7%BF%BB%E8%AD%AF/UVa-ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Span 的性質]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%AD%86%E8%A8%98/linear%20algebra/20141021-span/"/>
    <id>http://m80126colin.github.io/blog/articles/筆記/linear algebra/20141021-span/</id>
    <published>2014-10-21T11:40:40.000Z</published>
    <updated>2014-10-23T08:50:46.000Z</updated>
    <content type="html"><![CDATA[<p>我們知道定義中，和子定理：</p>
<span>$$\text{如果 }U,V\text{ 是 vector space，則 }U+V=span(U\cup{V})$$</span>

<span>$$\begin{align}
& span(R\cap{S}) \\
\subseteq{} & span(R)\cap{span(S)} \\
\subseteq{} & span(R)\cup{span(S)} \\
\subseteq{} & span(R\cup{S}) = span(R+S) = span(R)+span(S) = span(span(R)\cup{span(S)})
\end{align}$$</span>]]></content>
    <summary type="html">
    <![CDATA[<p>我們知道定義中，和子定理：</p>
<span>$$\text{如果 }U,V\text{ 是 vector space，則 }U+V=span(U\cup{V})$$</span>

<span>$$\begin{align}
& span(R\cap{S}) \\
\s]]>
    </summary>
    
      <category term="線性代數" scheme="http://m80126colin.github.io/blog/tags/%E7%B7%9A%E6%80%A7%E4%BB%A3%E6%95%B8/"/>
    
      <category term="span" scheme="http://m80126colin.github.io/blog/tags/span/"/>
    
      <category term="筆記" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/"/>
    
      <category term="線性代數" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/%E7%B7%9A%E6%80%A7%E4%BB%A3%E6%95%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[梅塔特隆立方體 (Metatron)]]></title>
    <link href="http://m80126colin.github.io/blog/articles/metatron/"/>
    <id>http://m80126colin.github.io/blog/articles/metatron/</id>
    <published>2014-08-02T06:27:15.000Z</published>
    <updated>2014-08-02T08:01:34.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="http://blog.yam.com/RedPapaya/article/28452055" target="_blank" rel="external">梅塔特隆立方體 (Metatron)</a></li>
<li><a href="http://baike.baidu.com/view/3384756.htm" target="_blank" rel="external">梅塔特隆立方體 - Baidu</a></li>
<li><a href="http://baike.baidu.com/view/3531370.htm" target="_blank" rel="external">梅爾卡巴場 - Baidu</a></li>
<li><a href="http://baike.baidu.com/view/8553074.htm" target="_blank" rel="external">神聖幾何學 - Baidu</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="http://blog.yam.com/RedPapaya/article/28452055" target="_blank" rel="external">梅塔特隆立方體 (Metatron)</a></li>
<li><a href="ht]]>
    </summary>
    
      <category term="創作" scheme="http://m80126colin.github.io/blog/categories/%E5%89%B5%E4%BD%9C/"/>
    
      <category term="設定" scheme="http://m80126colin.github.io/blog/categories/%E5%89%B5%E4%BD%9C/%E8%A8%AD%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[20140730 近況]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E9%9B%9C%E8%A8%98/graduate/20140730-024300/"/>
    <id>http://m80126colin.github.io/blog/articles/雜記/graduate/20140730-024300/</id>
    <published>2014-07-29T18:43:19.000Z</published>
    <updated>2014-07-29T18:53:38.000Z</updated>
    <content type="html"><![CDATA[<p>最近都在架部落格 …</p>
<a id="more"></a>

<p>兩百多篇文章基本上還有 30 多篇沒有收進來</p>
<p>目前寫了 <code>hexo-tag-owl</code> 這個外掛來快速插入和排版影音<br>接下來把之前收進去的文章修改一下大概就好了<br>約估還要再四五天的光景</p>
<p>話說回來<br>土製 blog 系統的 bug 多少還是有 …<br>但至少是開源作者反應夠快都會修</p>
<p>只是對於他對圖片連結的設定有點異議<br>只好自己寫外掛</p>
<p><code>hexo-tag-owl</code> 在圖片只支援本地圖片插入<br>解決了當 blog 的根目錄是在 <code>m80126colin.github.io/blog</code> 時<br>圖片卻是從 <code>m80126colin.github.io</code> 來搜尋</p>
<p>至少有個整理的地方<br>部落格很多部份也想翻新<br>比如 Archive, Tag Cloud 等等<br>這又是另一段故事了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近都在架部落格 …</p>
]]>
    
    </summary>
    
      <category term="hexo" scheme="http://m80126colin.github.io/blog/tags/hexo/"/>
    
      <category term="hexo-tag-owl" scheme="http://m80126colin.github.io/blog/tags/hexo-tag-owl/"/>
    
      <category term="雜記" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/"/>
    
      <category term="後日談" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/%E5%BE%8C%E6%97%A5%E8%AB%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[推薦 ACGN 列表]]></title>
    <link href="http://m80126colin.github.io/blog/articles/acgn-list/"/>
    <id>http://m80126colin.github.io/blog/articles/acgn-list/</id>
    <published>2014-07-21T14:08:10.000Z</published>
    <updated>2014-07-29T18:55:10.000Z</updated>
    <content type="html"><![CDATA[<h1 id="小說">小說</h1>
<ul>
<li><a href="https://docs.google.com/document/d/1qDgn52fOZfIrlWjy-4LPeFq7b7CBaO1XUXPkdk992DI/edit" target="_blank" rel="external">18 歲的野比大雄</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="小說">小說</h1>
<ul>
<li><a href="https://docs.google.com/document/d/1qDgn52fOZfIrlWjy-4LPeFq7b7CBaO1XUXPkdk992DI/edit" target="_blank" ]]>
    </summary>
    
      <category term="ACGN" scheme="http://m80126colin.github.io/blog/tags/ACGN/"/>
    
      <category term="公告" scheme="http://m80126colin.github.io/blog/categories/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[「天然呆」部落史]]></title>
    <link href="http://m80126colin.github.io/blog/articles/history/"/>
    <id>http://m80126colin.github.io/blog/articles/history/</id>
    <published>2014-07-12T19:25:39.000Z</published>
    <updated>2014-07-16T13:12:08.000Z</updated>
    <content type="html"><![CDATA[<h1 id="yahoo,_pchome_(2005-11-21_-_2008-03-09)">yahoo, pchome (2005.11.21 - 2008.03.09)</h1>
<p>國中時代 blog 盛行，在一開始國一時班上使用 pchome 佔多數，進團班後使用 yahoo 部落格較為主流，因此開始使用 yahoo 部落格來紀錄心情。</p>
<h2 id="pchome_(2005-11-21_-_2007-04-05)">pchome (2005.11.21 - 2007.04.05)</h2>
<p>pchome 有 4 篇廢文。</p>
<h2 id="yahoo_(2006?_-_2008-03-09)">yahoo (2006? - 2008.03.09)</h2>
<p>由於 yahoo 沒有備份到，因此當時的資料都已流失，使用日期已不可考。</p>
<h1 id="天空部落_(2008-03-09_-_2011-05-22)">天空部落 (2008.03.09 - 2011.05.22)</h1>
<p>高中後部落格停滯一段時間，最終決定在 yam 的天空部落撰寫，經營了 3 ~ 4 年，最終因為 FB 的興起加上時間的關係最後沒有活動。</p>
<h1 id="FC2_(2011-06-03_-_2012-06-01)">FC2 (2011.06.03 - 2012.06.01)</h1>
<p>大學有一段時間輾轉來到 FC2，寫了約一年的筆記後因為課業繁忙而停止活動。</p>
<h1 id="hexo_(2014-07_-)">hexo (2014.07 -)</h1>
<p>大學畢業後，利用 hexo 系統重新建構部落格。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="yahoo,_pchome_(2005-11-21_-_2008-03-09)">yahoo, pchome (2005.11.21 - 2008.03.09)</h1>
<p>國中時代 blog 盛行，在一開始國一時班上使用 pchome 佔多數，進團班後使用 ]]>
    </summary>
    
      <category term="天然呆" scheme="http://m80126colin.github.io/blog/tags/%E5%A4%A9%E7%84%B6%E5%91%86/"/>
    
      <category term="部落格" scheme="http://m80126colin.github.io/blog/tags/%E9%83%A8%E8%90%BD%E6%A0%BC/"/>
    
      <category term="公告" scheme="http://m80126colin.github.io/blog/categories/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[心得] 穿梭時空旅]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E5%89%B5%E4%BD%9C/%E5%BF%83%E5%BE%97/review-2/"/>
    <id>http://m80126colin.github.io/blog/articles/創作/心得/review-2/</id>
    <published>2014-07-12T16:30:59.000Z</published>
    <updated>2014-07-12T17:24:47.000Z</updated>
    <content type="html"><![CDATA[<h1 id="相關書訊">相關書訊</h1>
<ul>
<li>書籍ISBN: 9577336035</li>
<li>中文書名: 時間機器</li>
<li>原文書名: the Time Machine</li>
<li>書籍作者: H.G.威爾斯</li>
<li>書籍編譯者: 蔡伸章</li>
<li>出版單位: 新雨出版社</li>
<li>出版年月: 2001 年 10 月</li>
<li>版次: 初版</li>
</ul>
<a id="more"></a>

<p>愛因斯坦的狹義相對論認為時間旅行並非絕不可能的事，若這個說法屬實，踏上時空之旅的人們將會看到怎樣的未來？本書作者H.G.威爾斯以科學的概念以及天馬行空的想像力，為我們描述西元802700年的未來世界，對時空旅行有興趣的讀者絕對不能錯過這部精采絕倫的科幻小說。</p>
<p>蟲洞可以讓物質以光速在通道內前進，若再加上愛因斯坦「光速前進的物體時間靜止」的理論，時間之旅將不再是個空洞的夢想。問題是時間之旅真的可行嗎？</p>
<p>宇宙學家霍金（Steven Hawking）的說法或許可以為這個議題下一個註解：「時間之旅是不可能的，因為並沒有大批來自未來的觀光客，造訪我們的世界。」</p>
<p>或許吧。不過世事難料，未來的事情誰知道呢？</p>
<h1 id="內容摘錄">內容摘錄</h1>
<p>以下就是我的新看法。非常簡單，第一種人類是在地上生活的，第二種人類是過地下生活的。有三個特殊的情況使我認為他們之所以很少在地面上出現，是由於大部分動物都有群居黑暗的習性使然。舉例來說，肯塔基洞穴的那種白魚便是如此。第二、那些有反光能力的大眼睛，是生活在夜間的動物一個共同特性，例如貓頭鷹、貓等都是。最後一點，那些太陽下清楚可見的亮光，那些面對黑暗就亂成一團嗆惶跳竄，那種在亮處頭部下垂的特殊姿勢，再再強而有力地說明了一個事實：他們的視網膜是極端敏感的。(p.098)</p>
<h1 id="我的觀點">我的觀點</h1>
<p>作者威爾斯是出生於英國的小說家。作品分成前後兩期：前期的作品屬科幻小說，他預言了科學發明提供的機會，提出關於其危險性的警告，此時的著名的作品有《時間機器》以及《星際大戰》。而威爾斯第二個時期的作品從預言未來轉向改造事實，《基普斯》、《波里先生的歷史》等曾為他企圖喚起人們重視世界秩序不穩定的媒介。在《時間機器》裡，作者以第三視角紀錄「時間旅客」不可思議的行為－－研發製作時間機器並作了一趟時間旅行。故事中提到時間旅客造訪了八十萬年後的世界，並詳盡描述當時的情形。</p>
<p>其實在早期的著作中，隱約可見威爾斯後期作品理念的萌芽。《時間機器》：「所以照我的觀察，這些上層世界的人們，由於長時間生存於安逸之中，逐漸退化成一種美麗而柔弱的體形；相反地，生活於地下的人們，由於長時間的苦役，鍛鍊成了他們機械般的體形，一種進化上的分歧便開始了，就這樣原本十全十美的情況被打破了，這時候人們才開始領悟到任何一種完美的平衡都缺乏了持久的特性。時光不斷地流轉，居住在下層的人們，逐漸發生糧食不足的問題。當然這種饑荒是如何來的，我並不知道。於是『求生』的本能又回到他們的身上，他們到處去尋找可供食用的東西，他們平日與機器為伍，而機器這東西不管有多麼完美，除了操作方法之外，是多多少少地需要一點思考的，因為這種需要，可能使他們比上層世界的人們保留了更多的創造力，但也無庸否認的，人性其他的特質已由他們身上消失了，所以當其他各種肉類都無法滿足他們時，吃人的惡習便開始了。雖然早在數千年以前，人類便停止了這種習慣，但這是我在公元八零二七零零年所親眼見的，這些解釋也許是我有限的智慧所能提出的一個錯誤的說法，但這些猜測，是根據於我眼見的事實，在此我僅是轉述於你們！」(p.134)其實威爾斯當時早已對社會有所認識並提出警告，藉由時間機器，闡明了勞資對立以及社會階級差異的不合理。</p>
<p>「四周陳列著一些破爛燒焦的東西，仔細辨認之下，依稀仍可看出是些書籍，它們早已一頁頁地肢解分離，上面印的字也已模糊不清了，但由書殼的硬紙板及釘書針來判斷，他們應該是裝訂成冊的書，如果我是一個文學家，再這副景象下不免要為時光易逝而嘆息！可惜我不是，我只為這些爛紙上曾經花費的勞力可惜，當年多少才子野心勃勃地著書立說，而今安在？那時，我不得不承認，我主要是在想著『哲學會板』和我在物理光學上所寫的十七篇論文。」除了批判當時的社會現象外，作者也產生了「逝者如斯夫」的感慨，當時光流轉，現在所做的努力到當時會是如何模樣我們不知，但是我們只要努力，未來就有無限可能！</p>
<h1 id="討論議題">討論議題</h1>
<p>在《時間機器》中，作者提出了對當時社會現象的見解，而現在的社會與當時有無極大的差距？現代社會是否也存有許多致命的危機？</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="相關書訊">相關書訊</h1>
<ul>
<li>書籍ISBN: 9577336035</li>
<li>中文書名: 時間機器</li>
<li>原文書名: the Time Machine</li>
<li>書籍作者: H.G.威爾斯</li>
<li>書籍編譯者: 蔡伸章</li>
<li>出版單位: 新雨出版社</li>
<li>出版年月: 2001 年 10 月</li>
<li>版次: 初版</li>
</ul>
]]>
    
    </summary>
    
      <category term="時間機器" scheme="http://m80126colin.github.io/blog/tags/%E6%99%82%E9%96%93%E6%A9%9F%E5%99%A8/"/>
    
      <category term="H.G.威爾斯" scheme="http://m80126colin.github.io/blog/tags/H-G-%E5%A8%81%E7%88%BE%E6%96%AF/"/>
    
      <category term="創作" scheme="http://m80126colin.github.io/blog/categories/%E5%89%B5%E4%BD%9C/"/>
    
      <category term="心得" scheme="http://m80126colin.github.io/blog/categories/%E5%89%B5%E4%BD%9C/%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kohctpyktop: Engineer of the People 記錄]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E9%81%8A%E6%88%B2/kohctpyktop-engineer-of-the-people/"/>
    <id>http://m80126colin.github.io/blog/articles/遊戲/kohctpyktop-engineer-of-the-people/</id>
    <published>2014-05-26T16:36:01.000Z</published>
    <updated>2014-07-28T08:01:36.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.kongregate.com/games/krispykrem/kohctpyktop-engineer-of-the-people" target="_blank" rel="external">Kohctpyktop</a></p>
<a id="more"></a>

<h1 id="Level_1:_KT411I_–_QUAD_INVERTER_GATE">Level 1: KT411I – QUAD INVERTER GATE</h1>
<h2 id="PNP_和_NPN">PNP 和 NPN</h2>
<h2 id="結果">結果</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">eNrtmVsOgjAQRe1Mf1iDW/Dftbj/jVgqwRr7UApY7KEpJTn3UgjkMqT2Ys/DzQxX</div><div class="line">Y09LWo9GSbai0WTHjDE/dv04MGLEiBEjRozO6Ms5SW+eqmq011PRx3W4wR3Ls89z</div><div class="line">j2L1qgQfndkTzDP4U7zsApW3raNwk/UnkT9V+NcGCZJlkg2jMxnZH2V6u1TlPcnl</div><div class="line"><span class="number">0</span>HcEhUJbpAePSigUCiUqw1ox7o2VldScUCi0x6hMxx1hCIVCiUqZlp+m7dsg5RFD</div><div class="line">odA<span class="keyword">do</span>7JuMT77m6yln+gC3awihUKhrdJt1rhXicp4r6eFyw4rSb53UCj0V4l0B7uO</div><div class="line">yPI=</div></pre></td></tr></table></figure>

<h1 id="Level_2:_KT221A_–_DUAL_2-INPUT_AND_GATE">Level 2: KT221A – DUAL 2-INPUT AND GATE</h1>
<h1 id="AND_Gate">AND Gate</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">eNrtmkEOgyAQRQvDxjP0Ct33LL3/R<span class="keyword">do</span>QEhkEJCKa0Cdh9fgSceY7BN3LPZePWd7G</div><div class="line">PY40hAeE9tcOCE1orCpChAgRIrxMWPn47M1Y/NyxqkOEvpyz5ctTEcn2fmol6Wre</div><div class="line">Fir+ZjkqgYURmlafFwqFNlFZL5Vpa4baTJYmNMnwBjrQkYrP22SVUCgU+t90eqtU</div><div class="line">FSUBAIUOorPv3SawyqoZit6bE9JQ6BCqM21CI53dKglpKJSqEqvcpYKRQqFXVJVY</div><div class="line"><span class="number">5</span>e1n3FUalf8ELRR6MU0LkdPOuMedgA+<span class="number">2</span>ynzvp90vcVs16t8YtkMIeCj0NKuM/hWK</div><div class="line">M01r0yztnvcGR/oCkpXGuQ==</div></pre></td></tr></table></figure>

<h2 id="簡單版">簡單版</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">eNrt2U0OgyAQhmFg2HiGXsF9z9L7X6Qp7UInUKnU8PdqWD0ZjMp8avSrvy0Pu9yt</div><div class="line"><span class="constant">N2f2uQvduUIbdq4qhRRSSCGFQxcmH3fHR3Rc1d8Lw+ucS29BRSQ6yjVsshm74+bo</span></div><div class="line">Z764Js8IRdE/qzdJfnWoN5s+Vax6PEMvzqToGWeFJYqi6Nw6QlQKtxhFG9fuv/z6</div><div class="line">iMqvYSiaWZYo2pjuurTLIB0gKlmWKMpbJVF5qEKQomjrb5VzRGXdv9yjPJVQdFLV</div><div class="line">PVz1D/jFURkf5Vp8I+Q9n7AsUbTZqFRdWjxzhUR6AhTIxnc=</div></pre></td></tr></table></figure>

<h1 id="Level_3:_KT141AO_–_4-INPUT_AND/OR_GATE">Level 3: KT141AO – 4-INPUT AND/OR GATE</h1>
<h2 id="OR_Gate">OR Gate</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">eNrtmUsSgjAQBeUNG87gFdx7Fu9/ES3KTwJJGAigJW2KhXSPJCH1AmV7ac/d<span class="comment">remu</span></div><div class="line">TXta0iikkMLdC5tnm1mooC0sXDhGjTvrLWQBUEghhRQ6C/vHOeU/PTWz5FFPPX0M</div><div class="line">e/I68zimZfVfZ6hSqkcDLz49ee23pV2kQdcDbzVRLk8jLXvfYrO4ECz+UbnFhJuz</div><div class="line"><span class="number">4</span>ps8Gm8saTjcBZImncKcZT3ltI/qU1QyVBZUzZOLaVUhs2AjQ3XCVjO5XTDnNwTX</div><div class="line">jgGFOqkxG9D/pEQlNM66foNlNqBQopIwzIehKf167r6u8cwJJSqhx4jKildswhBK</div><div class="line">VEIPQK0cpCEkKqFE5aB8m3+UoL9KrYIyk9Dt6TcSyRmV6aOesgCgUOj8qNw9ke4j</div><div class="line"><span class="number">6</span>Mhz</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">eNrtmV2SgyAQhOO0LznDXmHf9yy5/0WyElB+BkQMMVody4Tym0YyYDuW4+/4c38M</div><div class="line">979hvLVsFH5GOChb5RmrpPpQK6S5/7gq5QLYJBS7pRkuCtMJEG9rFDb+RwkHu0XI</div><div class="line">BUAhhRRSWCE05ZzkP4YCUPf9dLzhNRD9xx+EOTp9y0qgQLaEeWOAEhShqQm9J5iD</div><div class="line">pgGdw/C52RKwTN2xMf9TIebo1JCYL4o5GfDlL5XrR1Ju82DnLh/iloWkSQ8D/H66</div><div class="line">hMTrdzVKMkEyr8iaCCkFSJHLTrxcBV24fy0mAWIWXjsuJ0/KuRM1N/1MMm/OVe5N</div><div class="line">SlpNwWyQXpHSKkmtxblKUS0ZmStSWuWVL/+41Am1cABqzwiD4vPibHVU0QztE7xr</div><div class="line">7DgvWHOS0ipJr1o3pveFRrujGZLSKk9pDv47iLiqTHFQVSY4rCpjfOpcIXk3lFCE</div><div class="line">LkurJKVVRvJdb5Sg7MvAPkShUsw+oFKIXoOhWKF9L11fHig+RFfSbM8gJX0P7fOO</div><div class="line"><span class="addition">+y1Wqe/7Ke9ZX0H920K/816mAic9mh7gSE/J1slE</span></div></pre></td></tr></table></figure>

<h1 id="Level_4:_KO229_–_POWER_ON_RESET_GENERATOR">Level 4: KO229 – POWER ON RESET GENERATOR</h1>
<h2 id="Delayer">Delayer</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">eNrtmVGSgyAQRAPtT86QK+R/z7L3v8gmkIDCMBApDa4NRVX0TQ9qTNcQpvt0u/<span class="number">6</span><span class="operator">a</span></div><div class="line"><span class="number">64</span>+ZLms6hRRSSCGFFB5LaJLxgdAuRqPQCL1JaNfO2HGPebeurxKanYVefN6X3JVz</div><div class="line">ttwcBSCOfhradJEmJv4Gll+Vcp4s1ROnIilBwueHUoBLOM9bCkou+h32OvQf/EGc</div><div class="line">VQgKUI6S5hIj4wVXgkKeclwyYXtC5bkgtuw7egZHBvE7hO+QcDhVoO9usXhBXjhe</div><div class="line">loofTcLxhIb9HSoBLju+<span class="number">4</span>ImZFzeZNSkp6dg0uN7O2kaKihbjP2daJSnpWSj4NGiV</div><div class="line"><span class="variable">pKTnrhtlnC3ErboQ76g5K3UjVC0OUHPSKklJ</span>/<span class="number">4</span>FVNtE+M6xZJVZTLsBJSUkHMFJx</div><div class="line"><span class="number">4</span>yirKjutElvVnEeyym12lEhJSZd2p1pHMDTNWPSdcFvbCf9c20i1vwVEI8WMYQRH</div><div class="line">arRKefRT/lhISYNVytVfZpVKZmxh4C31KvoW78odYQxH+<span class="variable">gMZ3Mgu</span></div></pre></td></tr></table></figure>

<h1 id="Level_5:_KO223_–_DUAL_FIXED_FREQUENCY_OSCILLATOR">Level 5: KO223 – DUAL FIXED FREQUENCY OSCILLATOR</h1>
<h2 id="Repeater">Repeater</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">eNrtml1uwyAQhDHDS87QK/S9Z+n9L9KGHxswrLa2k9pmIEiRvh0Q2LPYIe7TfTy+</div><div class="line">p8fX5MyWOqpw8tUUTSG0MdgWTSlsVYXQVqMpR0zz/PMceedQSCGFFJ5k0zFbNx3D</div><div class="line"><span class="constant">TeeKQv84Z/vFUwDNtp9axJYK8nFnCl+6NFRUNIlixyV9FmeS1NcWTqWB7ULRop21</span></div><div class="line">JB2Byq7rdhWQdqSls26AlbhXawNKN1UBPubXJM48PyhmGgOjUeqlwDztFFfY0ncY</div><div class="line">OlqCbIiZ+0Q7xoakkFl0wS/MaN1rpkq156ZlqnyflpR0HEqX3SBVqihaFLQDKSld</div><div class="line">dqdU2d2V0Ni0ipfs1ZdcC1HLZ07Soah4tw/vsgukSkiLCSVlMiQl3eoyLb21y66Q</div><div class="line">KrHjl5D64KZMpCsprUQ6aKqky45IlW84I5dpWuo1zaXyOXbzDFw4QM/75wk56f2p</div><div class="line">KqFVr9gQe4b4Ap6opO349zVn3IekynbbTw+8iKsLUf07YsPNo9tJQaORjpIqT+Ky</div><div class="line">f8hIP494yGI=</div></pre></td></tr></table></figure>

<h1 id="Level_6:_KL2S1_–_DUAL_SET-RESET_LATCH">Level 6: KL2S1 – DUAL SET-RESET LATCH</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">eNrtWUGShCAM1LSXecN+Ye/<span class="number">7</span>lv3/R3YWHSFIAshYKpOxrJqiOwGV7qBM39PX43d8</div><div class="line">/IzTsOe4ZSBFR1WPPolPVdSj/z8+D1pTVPRYGThE1zvuDaTawF5njgVaoAVa4FmB</div><div class="line">uw25ugTsKjpvKnOVhXV3Ke905rjlHMk/hwJInu0ogRzlv2F9IAj7JkwDOSIWZgr2</div><div class="line">gf7aYhoWksuwRHHOK/<span class="number">3</span>zFNLwsFSSEkacXOyskEgReSYIxM2ozsHZ6EQGNRESU7kH</div><div class="line"><span class="constant">OHUwYl73PG+OFw5hwyglxpMzPc9zgw5E5gNdw9wWsrieaTUKzRUWPKQ5OBwF2JPw</span></div><div class="line">V+0MyDUFZhXc66Un3yEzPfZQDnRc0emLSsFlUcwn7jRmQw39HLQjhZ5vlTjzhgCZ</div><div class="line">WNiEN/RjUDQopTNnuJ5VgtJ3JYzFhsFiCVpFA6BmhpmhoYbmUFkpmspyCi1QN8wq</div><div class="line">C2vHuoBHPbpWQ2iPCTA5GGpoRguijloUijvdq9NXlWwnSoxNVrS5EQ2vBnrsdmQm</div><div class="line">NEO7tUp1tu9TWaFCBXUXOcPFrLJ9Dz+xGA+X2VBRaQGPzKs9TA6GGtr8iQz5D2gZ</div><div class="line">VNOvpn3RN47Z436LVabPdvRVVPJfJFiJqXmtgLKaJds9N9TQgvc+XSmgxk0fQd2i</div><div class="line">MxzsSKnfH1/8yWE=</div></pre></td></tr></table></figure>

<h1 id="Level_7:_KL2T1_–_DUAL_TOGGLE_LATCH">Level 7: KL2T1 – DUAL TOGGLE LATCH</h1>
<h1 id="Level_8:_KO224X_–_DUAL_FREQUENCY_OSCILLATOR">Level 8: KO224X – DUAL FREQUENCY OSCILLATOR</h1>
<h1 id="LEVEL_9:_KD124_–_2-TO-4_LINE_DECODER">LEVEL 9: KD124 – 2-TO-4 LINE DECODER</h1>
<h1 id="LEVEL_10:_KA180_–_2-BIT_ADDER_WITH_CARRY">LEVEL 10: KA180 – 2-BIT ADDER WITH CARRY</h1>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.kongregate.com/games/krispykrem/kohctpyktop-engineer-of-the-people" target="_blank" rel="external">Kohctpyktop</a></p>
]]>
    
    </summary>
    
      <category term="小遊戲" scheme="http://m80126colin.github.io/blog/tags/%E5%B0%8F%E9%81%8A%E6%88%B2/"/>
    
      <category term="電晶體" scheme="http://m80126colin.github.io/blog/tags/%E9%9B%BB%E6%99%B6%E9%AB%94/"/>
    
      <category term="Transistor" scheme="http://m80126colin.github.io/blog/tags/Transistor/"/>
    
      <category term="遊戲" scheme="http://m80126colin.github.io/blog/categories/%E9%81%8A%E6%88%B2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown 檔格式]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%AD%86%E8%A8%98/usage/md-file-format/"/>
    <id>http://m80126colin.github.io/blog/articles/筆記/usage/md-file-format/</id>
    <published>2014-05-13T19:03:12.000Z</published>
    <updated>2014-07-12T09:57:03.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>

<h1 id="標題">標題</h1>
<h2 id="大標題">大標題</h2>
<p>標題有分 <code>&lt;h1&gt;</code>、<code>&lt;h2&gt;</code>、<code>&lt;h3&gt;</code>、<code>&lt;h4&gt;</code>、<code>&lt;h5&gt;</code>、<code>&lt;h6&gt;</code> 六種<br>其中 <code>&lt;h1&gt;</code> 的寫法有兩種，第一種是在標題下畫等號：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="header">我是大標題 &lt;h1&gt;</span></div><div class="line">====</div></pre></td></tr></table></figure>

<p>或是</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 我是 &lt;h1&gt;</span></div></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="中標題">中標題</h2>
<p><code>&lt;h2&gt;</code> 屬於中標題，亦有兩種寫法：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="header">我是中標題 &lt;h2&gt;</span></div><div class="line">----</div></pre></td></tr></table></figure>

<p>或者是</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">## 我是 &lt;h2&gt;</span></div></pre></td></tr></table></figure>

<h2 id="其他標題">其他標題</h2>
<p>其他級數的標題只有一種寫法，就是由前面的<code>#</code>號來決定：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">### 我是 h3</span></div><div class="line"><span class="preprocessor">#### 我是 h4</span></div><div class="line"><span class="preprocessor">##### 我是 h5</span></div><div class="line"><span class="preprocessor">###### 我是 h6</span></div></pre></td></tr></table></figure>

<h1 id="原始碼">原始碼</h1>
<h2 id="行內式">行內式</h2>
<p>如果要在字句間呈現原始碼 <code>code</code>，那麼可以用兩個<code>` </code>包住文字，如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="code">`code`</span></div></pre></td></tr></table></figure>

<p>如果要 <code>`插入反引號` </code>，就用多個反引號來包：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="escape">``</span> <span class="escape">`插</span>入反引號<span class="escape">` </span><span class="escape">``</span></div></pre></td></tr></table></figure>

<h2 id="單行式">單行式</h2>
<p>單行原始碼也可以在每一行前面使用 <code>&lt;tab&gt;</code> 或四個空格：</p>
<pre><code>單行註解
</code></pre><h2 id="段落式">段落式</h2>
<p>有兩種，第一種是由前後連續三個 <code>` </code> 包圍段落：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">我是段落註解</div><div class="line">第二行</div><div class="line">第三行</div></pre></td></tr></table></figure>

<p>另外一種，則是在每一行前面都加上 <code>&lt;tab&gt;</code>：</p>
<pre><code>我是段落註解
第二行
第三行
</code></pre><h1 id="列表">列表</h1>
<h2 id="無序列表">無序列表</h2>
<p>使用無序列表很簡單，就在每一項前面加 <code>*</code> 號、<code>+</code> 號、或是 <code>-</code> 號：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">* </span>祭止兀</div><div class="line"><span class="bullet">* </span>祭央乂</div><div class="line"><span class="bullet">* </span>騜央丸</div><div class="line"></div><div class="line"><span class="bullet">+ </span>祭止兀</div><div class="line"><span class="bullet">+ </span>祭央乂</div><div class="line"><span class="bullet">+ </span>騜央丸</div><div class="line"></div><div class="line"><span class="bullet">- </span>祭止兀</div><div class="line"><span class="bullet">- </span>祭央乂</div><div class="line"><span class="bullet">- </span>騜央丸</div></pre></td></tr></table></figure>

<p>結果如下：</p>
<ul>
<li>祭止兀</li>
<li>祭央乂</li>
<li>騜央丸</li>
</ul>
<h2 id="有序列表">有序列表</h2>
<p>有序列表則以標號來表示：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">1. </span>祭止兀</div><div class="line"><span class="bullet">2. </span>祭央乂</div><div class="line"><span class="bullet">3. </span>騜央丸</div></pre></td></tr></table></figure>

<p>結果如下：</p>
<ol>
<li>祭止兀</li>
<li>祭央乂</li>
<li>騜央丸</li>
</ol>
<h2 id="巢狀列表">巢狀列表</h2>
<p>巢狀列表和前面的規則大同小異，只要在前面加上<code>&lt;tab&gt;</code> 或四個空格：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">*</span> A</div><div class="line">    A1</div><div class="line">    A2</div><div class="line"><span class="keyword">*</span> B</div><div class="line">	<span class="keyword">*</span> BA</div><div class="line">	<span class="keyword">*</span> BB</div><div class="line">		<span class="keyword">*</span> BBA</div><div class="line">		<span class="keyword">*</span> BBB</div><div class="line">		<span class="keyword">*</span> BBC</div><div class="line">	<span class="keyword">*</span> BC</div><div class="line"><span class="keyword">*</span> C</div></pre></td></tr></table></figure>

<ul>
<li>A<ul>
<li>A1</li>
<li>A2</li>
</ul>
</li>
<li>B<ul>
<li>BA</li>
<li>BB<ul>
<li>BBA<br>凱因斯</li>
<li>BBB</li>
<li>BBC</li>
</ul>
</li>
<li>BC</li>
</ul>
</li>
<li>C</li>
</ul>
<ol>
<li>A<ol>
<li>AA</li>
<li>AB</li>
</ol>
</li>
<li>B<ol>
<li>BA</li>
</ol>
</li>
<li>C<ol>
<li>CA</li>
<li>CB</li>
<li>CC</li>
</ol>
</li>
</ol>
<h1 id="連結">連結</h1>
<h2 id="基本語法">基本語法</h2>
<p>連結的語法如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="link_label">內容</span>](<span class="link_url">網址</span>)</div></pre></td></tr></table></figure>

<ul>
<li>範例：<br><a href="https://www.google.com" target="_blank" rel="external">google 首頁</a></li>
</ul>
<h2 id="提示文字">提示文字</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="link_label">內容</span>](<span class="link_url">網址 "提示文字"</span>)</div></pre></td></tr></table></figure>

<ul>
<li>範例：<br><a href="https://www.google.com" title="google 首頁" target="_blank" rel="external">估狗</a></li>
</ul>
<h1 id="插圖">插圖</h1>
<h1 id="語意標籤">語意標籤</h1>
<h2 id="段落">段落</h2>
<h2 id="強調">強調</h2>
<p>用 <code>**</code> 夾住要 <strong> 強調的文字 </strong>：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">*</span><span class="keyword">*</span> 強調的文字 <span class="keyword">*</span><span class="keyword">*</span></div></pre></td></tr></table></figure>

<h2 id="引用">引用</h2>
<h3 id="單純引用">單純引用</h3>
<blockquote>
<p>不要因為有配著偉人照片，就隨便相信網路上流傳的名言佳句。──胡適</p>
</blockquote>
<h3 id="巢狀引用">巢狀引用</h3>
<blockquote>
<p>從前有座山，山裡有座廟，廟裡有個老和尚講故事，講的什麼呢？</p>
<blockquote>
<p>講的是從前有座山，山裡有座廟，廟裡有個老和尚講故事，講的什麼呢？</p>
<blockquote>
<p>講的是從前有座山，山裡有座廟，廟裡有個老和尚講故事，講的什麼呢？</p>
</blockquote>
</blockquote>
</blockquote>
<h1 id="參考連結">參考連結</h1>
<p><a href="http://markdown.tw" target="_blank" rel="external">Markdown 語法說明</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<!-- more -->

<h1 id="標題">標題</h1>
<h2 id="大標題">大標題</h2>
<p>標題有分 <code>&lt;h1&gt;</code>、<code>&lt;h2&gt;</code>、<code>&lt;h3&gt;</code>、<code>&lt;h4&gt;</code>、<code>&lt;h5&gt;</code>、<code>&lt;h6&gt;</code> 六種<br>其中 <code>&lt;h1&gt;</code> 的寫法有兩種，第一種是在標題下畫等號：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="header">我是大標題 &lt;h1&gt;</span></div><div class="line">====</div></pre></td></tr></table></figure>

<p>或是</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># 我是 &lt;h1&gt;</span></div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
      <category term="md" scheme="http://m80126colin.github.io/blog/tags/md/"/>
    
      <category term="markdown" scheme="http://m80126colin.github.io/blog/tags/markdown/"/>
    
      <category term="md檔" scheme="http://m80126colin.github.io/blog/tags/md%E6%AA%94/"/>
    
      <category term="格式" scheme="http://m80126colin.github.io/blog/tags/%E6%A0%BC%E5%BC%8F/"/>
    
      <category term="format" scheme="http://m80126colin.github.io/blog/tags/format/"/>
    
      <category term="使用說明" scheme="http://m80126colin.github.io/blog/tags/%E4%BD%BF%E7%94%A8%E8%AA%AA%E6%98%8E/"/>
    
      <category term="usage" scheme="http://m80126colin.github.io/blog/tags/usage/"/>
    
      <category term="筆記" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/"/>
    
      <category term="使用說明" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/%E4%BD%BF%E7%94%A8%E8%AA%AA%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[數與大數]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%AD%86%E8%A8%98/article/%E6%95%B8%E8%88%87%E5%A4%A7%E6%95%B8/"/>
    <id>http://m80126colin.github.io/blog/articles/筆記/article/數與大數/</id>
    <published>2014-05-13T18:53:44.000Z</published>
    <updated>2014-07-15T09:31:58.000Z</updated>
    <content type="html"><![CDATA[<h2 id="數的單位">數的單位</h2>
<a id="more"></a>

<p>1 googol = <span>$10^{100}$</span></p>
<p>1 googolplex = <span>$10^{10^{100}}$</span></p>
<h2 id="指數">指數</h2>
<h3 id="指數律">指數律</h3>
<h3 id="指數運算">指數運算</h3>
<h2 id="英文數字">英文數字</h2>
<h2 id="德文數字">德文數字</h2>
<h2 id="中文數字">中文數字</h2>
<h1 id="超大數">超大數</h1>
<h2 id="高德納箭號表示法_(Knuth’s_Up-arrow_Notation)">高德納箭號表示法 (Knuth’s Up-arrow Notation)</h2>
<h2 id="Hyper運算符_(Hyperoperation)">Hyper運算符 (Hyperoperation)</h2>
<h2 id="施坦因豪斯-莫澤表示法_(Steinhaus–Moser_Notation)">施坦因豪斯-莫澤表示法 (Steinhaus–Moser Notation)</h2>
<h2 id="阿克曼函數_(Ackermann_Function)">阿克曼函數 (Ackermann Function)</h2>
<h2 id="康威鏈式箭號表示法_(Conway_Chained_Arrow_Notation)">康威鏈式箭號表示法 (Conway Chained Arrow Notation)</h2>
<h3 id="葛立恆數_(Graham’s_Number)">葛立恆數 (Graham’s Number)</h3>
<h1 id="參考資料">參考資料</h1>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Knuth%27s_up-arrow_notation" target="_blank" rel="external">Wikipedia - 高德納箭號表示法</a></li>
<li><a href="http://en.wikipedia.org/wiki/Hyperoperation" target="_blank" rel="external">Wikipedia - Hyper運算符</a></li>
<li><a href="http://en.wikipedia.org/wiki/Steinhaus%E2%80%93Moser_notation" target="_blank" rel="external">Wikipedia - 施坦因豪斯-莫澤表示法</a></li>
<li><a href="http://en.wikipedia.org/wiki/Ackermann_function" target="_blank" rel="external">Wikipedia - 阿克曼函數</a></li>
<li><a href="http://en.wikipedia.org/wiki/Conway_chained_arrow_notation" target="_blank" rel="external">Wikipedia - 康威鏈式箭號表示法</a></li>
<li><a href="http://en.wikipedia.org/wiki/Graham%27s_number" target="_blank" rel="external">Wikipedia - 葛立恆數</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="數的單位">數的單位</h2>
]]>
    
    </summary>
    
      <category term="數字" scheme="http://m80126colin.github.io/blog/tags/%E6%95%B8%E5%AD%97/"/>
    
      <category term="大數" scheme="http://m80126colin.github.io/blog/tags/%E5%A4%A7%E6%95%B8/"/>
    
      <category term="英文" scheme="http://m80126colin.github.io/blog/tags/%E8%8B%B1%E6%96%87/"/>
    
      <category term="德文" scheme="http://m80126colin.github.io/blog/tags/%E5%BE%B7%E6%96%87/"/>
    
      <category term="中文" scheme="http://m80126colin.github.io/blog/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="高德納記號" scheme="http://m80126colin.github.io/blog/tags/%E9%AB%98%E5%BE%B7%E7%B4%8D%E8%A8%98%E8%99%9F/"/>
    
      <category term="筆記" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/"/>
    
      <category term="文章" scheme="http://m80126colin.github.io/blog/categories/%E7%AD%86%E8%A8%98/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[120601 CPE 夏番]]></title>
    <link href="http://m80126colin.github.io/blog/articles/20120602-011600/"/>
    <id>http://m80126colin.github.io/blog/articles/20120602-011600/</id>
    <published>2012-06-01T17:16:00.000Z</published>
    <updated>2014-07-21T09:39:47.000Z</updated>
    <content type="html"><![CDATA[<p>下雷</p>
<a id="more"></a>

<p>根據歷年解題報告<br>一二三四星題為 3 / 2 / 1 / 1 題</p>
<p>23621(UVa 11063): 2081 / 130 / 8<br>7 (37 + 120)<br>一星題無誤，只是看題沒看清楚就亂傳<br>Bug 一堆就炸了 QAQ</p>
<p>23631(UVa 12149): 1491 / 424 / 3<br>1 (3 + 0)<br>這題看名稱就 AC 了，開場首殺，一星題無誤</p>
<p>23641(UVa 118): 176 / 40 / 54<br>3 (118 + 40)<br>Lucky 貓二星題，機器人模擬題，苦工</p>
<p>23651(UVa 10684): 439 / 77 / 15<br>1 (23 + 0)<br>Lucky 貓二星題，簡單 DP 題 O(<span>$n^2$</span>)<br>可用 Greedy 加速至 O(<span>$n$</span>)</p>
<p>23661(UVa 10718): 73 / 2 / 134<br>1<br>Greedy 我罩門 QAQ<br>一開始太早開這題就卡到機器人題了<br>讓需要 1 的盡量多，不需要 1 的盡量少</p>
<p>23671(UVa 10700): 105 / 20 / 44<br>2 (65 + 20)<br>Lucky 貓三星題，DP 暴搜 O(<span>$n^3$</span>) 解決</p>
<p>23681(UVa 10404): 23 / 6 / 67<br>2<br>Lucky 貓三星題，之前誤以為要求 Grundy Number<br>然後 DP 誤判為 O(<span>$n^2$</span>) 然後就炸了 QAQ<br>後來 DP 應為 O(<span>$nm$</span>) 就過了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>下雷</p>
]]>
    
    </summary>
    
      <category term="CPE" scheme="http://m80126colin.github.io/blog/tags/CPE/"/>
    
      <category term="雜記" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/"/>
    
      <category term="椰林杜鵑啼" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/%E6%A4%B0%E6%9E%97%E6%9D%9C%E9%B5%91%E5%95%BC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[解題報告][UVa][10718] Bit Mask]]></title>
    <link href="http://m80126colin.github.io/blog/articles/%E7%A8%8B%E5%BC%8F%E7%A2%BC/uva/uva-10718-code/"/>
    <id>http://m80126colin.github.io/blog/articles/程式碼/uva/uva-10718-code/</id>
    <published>2012-05-30T02:09:00.000Z</published>
    <updated>2014-07-15T07:12:49.000Z</updated>
    <content type="html"><![CDATA[<p>題目大意：給你一個 N，再給下限 L，上限 U，問從 [L, U] 區間中取得最小一個數 M，使得 N or M 最大。</p>
<p>下有雷 ………..</p>
<a id="more"></a>

<p>解法：Greedy</p>
<p>儘量讓 N 中為 0 的位元，M 為 1；N 為 1 的位元， M 為 0。<br>因此從高位往低位檢查，<br>如果 N 為 1（M 儘量為 0），若 M 不能為 0，則必是因為 M 為 1 仍小於 L；<br>如果 N 為 0（M 儘量為 1），若 M 不能為 1，則必是因為 M 為 0 仍大於 U（此時不可能），<br>換句話說，M 為 1 時，M 需不大於 U。</p>
<p>Code：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">define</span> BIT(i) (1LL &lt;&lt; i)</span></div><div class="line"><span class="preprocessor">#<span class="keyword">define</span> OR(x,i) (x | BIT(i))</span></div><div class="line"><span class="preprocessor">#<span class="keyword">define</span> AND(x,i) (x & BIT(i))</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> n, L, U, ans, i;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>, &n, &L, &U) != EOF)</div><div class="line">	{</div><div class="line">		ans = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">31</span>; i &gt;= <span class="number">0</span>; i--)</div><div class="line">			<span class="keyword">if</span> ( OR(ans, i) &lt;= (AND(n, i) ? L: U) ) ans |= BIT(i);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>題目大意：給你一個 N，再給下限 L，上限 U，問從 [L, U] 區間中取得最小一個數 M，使得 N or M 最大。</p>
<p>下有雷 ………..</p>
]]>
    
    </summary>
    
      <category term="C++" scheme="http://m80126colin.github.io/blog/tags/C/"/>
    
      <category term="Greedy" scheme="http://m80126colin.github.io/blog/tags/Greedy/"/>
    
      <category term="程式碼" scheme="http://m80126colin.github.io/blog/categories/%E7%A8%8B%E5%BC%8F%E7%A2%BC/"/>
    
      <category term="UVa" scheme="http://m80126colin.github.io/blog/categories/%E7%A8%8B%E5%BC%8F%E7%A2%BC/UVa/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[120521 只是朋友]]></title>
    <link href="http://m80126colin.github.io/blog/articles/20120521-013400/"/>
    <id>http://m80126colin.github.io/blog/articles/20120521-013400/</id>
    <published>2012-05-20T17:34:00.000Z</published>
    <updated>2014-07-28T07:46:31.000Z</updated>
    <content type="html"><![CDATA[<p>半夜無事來Po首歌<br>最近都沒啥在聽音樂<br>Youtube 在這</p>
<div class="owl-media owl-video owl-youtube"><iframe src="http://www.youtube.com/embed/RhvQkDj4ic0" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe></div>

<a id="more"></a>

<p>好朋友只是朋友 歌詞<br>作詞：黃婷<br>作曲：徐偉銘</p>
<p>聽你說什麼我都很快樂<br>接近你連影子都微笑著<br>幾千隻紙鶴你都耐心地陪著我折<br>卻怎麼都折不掉那道無形的隔閡</p>
<p>越懂你陪著你就越寂寞<br>靈魂那麼美我卻碰不得<br>感覺再熾熱也不能讓飛蛾去撲火<br>靠近你的夢難道就能不失落</p>
<p>好朋友只是朋友 還是朋友 不能夠佔有<br>好朋友瘋狂以後 就一個人走 無所求<br>好朋友只是朋友 只能保留 一點點溫柔<br>我知道什麽時候回頭 不打擾你的自由</p>
<p>認識你也許我就足夠了<br>緣分的深淺我都不管了<br>可能你感動也看不見我心如刀割<br>哪怕很痛過 至少就不算錯過</p>
<p>好朋友只是朋友 還是朋友 不能夠佔有<br>好朋友瘋狂以後 就一個人走 無所求<br>好朋友只是朋友 只能保留 一點點溫柔<br>我知道什麽時候回頭 不打擾你的自由</p>
<p>愛人不是最好的朋友<br>朋友再好也不能牽手<br>感情在天平兩頭 誰都怕太沈重</p>
<p>好朋友只是朋友 還是朋友 不能夠佔有<br>好朋友瘋狂以後 還是一個人走 無所求<br>好朋友只是朋友 只能保留 一點點溫柔<br>我知道什麽時候回頭 不打擾你的自由</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>半夜無事來Po首歌<br>最近都沒啥在聽音樂<br>Youtube 在這</p>
<div class="owl-media owl-video owl-youtube"><iframe src="http://www.youtube.com/embed/RhvQkDj4ic0" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe></div>

]]>
    
    </summary>
    
      <category term="中文歌" scheme="http://m80126colin.github.io/blog/tags/%E4%B8%AD%E6%96%87%E6%AD%8C/"/>
    
      <category term="郁可唯" scheme="http://m80126colin.github.io/blog/tags/%E9%83%81%E5%8F%AF%E5%94%AF/"/>
    
      <category term="分享" scheme="http://m80126colin.github.io/blog/categories/%E5%88%86%E4%BA%AB/"/>
    
      <category term="中文歌" scheme="http://m80126colin.github.io/blog/categories/%E5%88%86%E4%BA%AB/%E4%B8%AD%E6%96%87%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[120514 2012 年 CPE 春番]]></title>
    <link href="http://m80126colin.github.io/blog/articles/20120514-052900/"/>
    <id>http://m80126colin.github.io/blog/articles/20120514-052900/</id>
    <published>2012-05-13T21:29:00.000Z</published>
    <updated>2014-07-21T09:39:50.000Z</updated>
    <content type="html"><![CDATA[<p>又是一篇遲到文 ….</p>
<a id="more"></a>

<p>…………… 不過終於破台了！！<br>(」・ω・)」うー！(／・ω・)／にゃー！！<br>(」・ω・)」うー！(／・ω・)／にゃー！！<br>除了白值有點高 +code 亂傳一通之外 (倒地)</p>
<p>寫得大致上都滿順的 ……<br>Rank 1 的學長根本神 (worship)<br>鋼琴、裝呆、茵可也超神 (worship)<br>另外某 rank 32 的神猜題實在太恐怖了 ……….</p>
<p>好吧其實沒什麼很高興<br>因為手速變慢了<br>等 夏番 吧</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>又是一篇遲到文 ….</p>
]]>
    
    </summary>
    
      <category term="CPE" scheme="http://m80126colin.github.io/blog/tags/CPE/"/>
    
      <category term="雜記" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/"/>
    
      <category term="椰林杜鵑啼" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/%E6%A4%B0%E6%9E%97%E6%9D%9C%E9%B5%91%E5%95%BC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[120514 清雜草]]></title>
    <link href="http://m80126colin.github.io/blog/articles/20120514-051400/"/>
    <id>http://m80126colin.github.io/blog/articles/20120514-051400/</id>
    <published>2012-05-13T21:14:00.000Z</published>
    <updated>2014-07-21T09:39:35.000Z</updated>
    <content type="html"><![CDATA[<p>來清個雜草</p>
<p>之後有時間在更新</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>來清個雜草</p>
<p>之後有時間在更新</p>
]]>
    </summary>
    
      <category term="雜記" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/"/>
    
      <category term="椰林杜鵑啼" scheme="http://m80126colin.github.io/blog/categories/%E9%9B%9C%E8%A8%98/%E6%A4%B0%E6%9E%97%E6%9D%9C%E9%B5%91%E5%95%BC/"/>
    
  </entry>
  
</feed>
